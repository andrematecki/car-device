/*	--------------- CREATE AM_CONTATO ------------------ 	*/
CREATE TABLE "AM_CONTATO"
(	"ID" NUMBER NOT NULL , 
	"NOME" VARCHAR2(20) NOT NULL, 
	"EMAIL" VARCHAR2(30) NOT NULL, 
	"TELEFONE" VARCHAR2(15), 
	"CIA" VARCHAR2(20), 
	"TITULO" VARCHAR2(20) NOT NULL, 
	"MSG" VARCHAR2(1000) NOT NULL, 
	CONSTRAINT "AM_CONTATO_PK" PRIMARY KEY ("ID")
);
 
CREATE SEQUENCE  "AM_CONTATO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

CREATE OR REPLACE TRIGGER "AM_CONTATO_TRG" 
BEFORE INSERT ON AM_CONTATO 
FOR EACH ROW 
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT AM_CONTATO_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
END;

ALTER TRIGGER "AM_CONTATO_TRG" ENABLE;

/*	--------------- CREATE AM_USUARIO ------------------ 	*/
CREATE TABLE "AM_USUARIO" 
(	"ID" NUMBER NOT NULL, 
	"EMAIL" VARCHAR2(25) NOT NULL, 
	"SENHA" VARCHAR2(25) NOT NULL 
	"TIPO" VARCHAR2(3) NOT NULL, 
	CONSTRAINT "AM_USUARIO_PK" PRIMARY KEY ("ID"), 
	CONSTRAINT "AM_USUARIO_UK1" UNIQUE ("EMAIL")
);

CREATE SEQUENCE  "AM_USUARIO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

CREATE TRIGGER "AM_USUARIO_TRG" 
BEFORE INSERT ON AM_USUARIO 
FOR EACH ROW 
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT AM_USUARIO_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
END;

ALTER TRIGGER "AM_USUARIO_TRG" ENABLE;


/*	--------------- CREATE AM_INVESTIDOR ------------------ 	*/
CREATE TABLE "AM_INVESTIDOR" 
(	"ID" NUMBER NOT NULL, 
	"NOME" VARCHAR2(25), 
	"SOBRENOME" VARCHAR2(25), 
	"ID_USUARIO" NUMBER, 
	 CONSTRAINT "AM_INVESTIDOR_PK" PRIMARY KEY ("ID")
	 CONSTRAINT "AM_INVESTIDOR_FK1" FOREIGN KEY ("ID_USUARIO")
	 REFERENCES "AM_USUARIO" ("ID")
);

CREATE SEQUENCE  "AM_INVESTIDOR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

CREATE OR REPLACE TRIGGER "AM_INVESTIDOR_TRG" 
BEFORE INSERT ON AM_INVESTIDOR 
FOR EACH ROW 
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT AM_INVESTIDOR_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
END;

ALTER TRIGGER "AM_INVESTIDOR_TRG" ENABLE;

/*	--------------- CREATE AM_NOTICIA ------------------ 	*/
CREATE TABLE "AM_NOTICIA" 
(	"ID" NUMBER NOT NULL, 
	"TITULO" VARCHAR2(30) NOT NULL, 
	"NOTICIA" VARCHAR2(255) NOT NULL,
	CONSTRAINT "AM_NOTICIA_PK" PRIMARY KEY ("ID")
);

CREATE SEQUENCE  "AM_NOTICIA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

CREATE TRIGGER "AM_NOTICIA_TRG" 
BEFORE INSERT ON AM_NOTICIA 
FOR EACH ROW 
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT AM_NOTICIA_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
END;

ALTER TRIGGER "AM_NOTICIA_TRG" ENABLE;
	
/*	--------------- CREATE AM_STATUS ------------------ 	*/
CREATE TABLE "AM_STATUS" 
(	"ID" NUMBER NOT NULL, 
	"DATA" DATE NOT NULL, 
	"TARGET" VARCHAR2(50) NOT NULL, 
	"DESCRICAO" VARCHAR2(255) NOT NULL, 
	CONSTRAINT "AM_STATUS_PK" PRIMARY KEY ("ID")
);

CREATE SEQUENCE  "AM_STATUS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

CREATE TRIGGER "AM_STATUS_TRG" 
BEFORE INSERT ON AM_STATUS 
FOR EACH ROW 
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT AM_STATUS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
END;

ALTER TRIGGER "AM_STATUS_TRG" ENABLE;
